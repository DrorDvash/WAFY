from selenium import webdriver
from selenium.webdriver.common.keys import Keys
import seleniumrequests
from selenium.webdriver.support.ui import Select
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait
import A3_Cross_Site_Scripting_XSS
import attack_csrf
import time
from attack_csrf import csrf_attack
from utility import get_captcha
"""

Module Broken Auth.
Urls: http://34.192.19.10/ba_captcha_bypass.php


"""
PATH = "C:\Program Files (x86)\chromedriver.exe"

def init():
    print("[+] Initializing")
    driver = seleniumrequests.Chrome(PATH)

    # Import data about the target (url, username, password)
    with open("secret.txt") as file:
        target_url, username, password = file.read().splitlines()

    # Login to website
    driver.get(target_url)
    element = driver.find_element_by_id("login")
    element.clear()
    element.send_keys(username)
    element = driver.find_element_by_id("password")
    element.clear()
    element.send_keys(password, Keys.RETURN)

    return driver, target_url

def authentication_attacks():

    # Import data about the target (url, username, password)
    with open("secret.txt") as file:
        target_url, username, password = file.read().splitlines()

    target_url = 'http://34.192.19.10/ba_captcha_bypass.php'
    driver = init()[0]
    driver.get(target_url)
    element = driver.find_element_by_id("login")
    element.clear()
    element.send_keys(username)
    element = driver.find_element_by_id("password")
    element.clear()
    element.send_keys(password, Keys.RETURN)
    test_stage1(driver, username, password)
    # driver = seleniumrequests.Chrome(PATH)
    # time.sleep(2)
    captcha_user = input('[ + ] Captcha: ').strip()
    response = driver.request('POST','http://34.192.19.10/ba_captcha_bypass.php', data={'login': username, 'password': password, 'captcha_user': captcha_user})
    # response = webdriver.request('POST', 'http://34.192.19.10/ba_captcha_bypass.php', data={username: password})
    print(response.text)
    driver.quit()



def test_stage1(driver, username, password):

    " In order to pass challenge one we will need to brute force user / password with the same captha "
    " login=asdasd&password=asdasd&captcha_user=asdasd&form=submit "
    # # storing the cookies generated by the browser
    # request_cookies_browser = driver.get_cookies()
    # print(request_cookies_browser)
    # # making a persistent connection using the requests library
    # params = {'os_username': 'username', 'os_password': 'password'}
    # s = requests.Session()

    # passing the cookies generated from the browser to the session
    # c = [s.cookies.set(c['name'], c['value']) for c in request_cookies_browser]
    # img = driver.find_element_by_xpath("//iframe[starts-with(@src, 'captcha_box.php')]")
    # print('[ + ]', img)
    # test = get_captcha(driver, img, "captcha.png")
    # print('[ + ]', test)
    # response = driver.request('POST', 'http://34.192.19.10/ba_captcha_bypass.php', data={username: password})
    # Login to website
    # element = driver.find_element_by_id("login")
    # element.clear()
    # element.send_keys(username)
    # element = driver.find_element_by_id("password")
    # element.clear()
    # element = driver.find_element_by_id("captcha_user")
    # element.clear()
    # element.send_keys(password, Keys.RETURN)
    # time.sleep(300)
    pass



authentication_attacks()